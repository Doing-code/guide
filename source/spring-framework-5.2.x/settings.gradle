//pluginManagement {
//	repositories {
//
//		maven { url 'https://repo.spring.io/plugins-release' }
//	}
//}

pluginManagement {
	repositories {
		def MY_ALIYUN_REPOSITORY_URL = 'https://maven.aliyun.com/nexus/content/groups/public'
		def MY_ALIYUN_JCENTER_URL = 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin'
		all { ArtifactRepository repo ->
			if(repo instanceof MavenArtifactRepository){
				def url = repo.url.toString()
				if (url.startsWith('https://repo.maven.apache.org/maven2')) {
//					project.logger.lifecycle "Repository ${repo.url} replaced by $MY_ALIYUN_REPOSITORY_URL."
					remove repo
				}

				if (url.startsWith('https://plugins.gradle.org/m2')) {
//					project.logger.lifecycle "Repository ${repo.url} replaced by $MY_ALIYUN_JCENTER_URL."
					remove repo
				}

			}
		}
		maven { url MY_ALIYUN_REPOSITORY_URL }
		maven { url MY_ALIYUN_JCENTER_URL }
		gradlePluginPortal()
	}
}
apply from: "$rootDir/gradle/build-cache-settings.gradle"

include "spring-aop"
include "spring-aspects"
include "spring-beans"
include "spring-context"
include "spring-context-indexer"
include "spring-context-support"
include "spring-core"
include "kotlin-coroutines"
project(':kotlin-coroutines').projectDir = file('spring-core/kotlin-coroutines')
include "spring-expression"
include "spring-instrument"
include "spring-jcl"
include "spring-jdbc"
include "spring-jms"
include "spring-messaging"
include "spring-orm"
include "spring-oxm"
include "spring-test"
include "spring-tx"
include "spring-web"
include "spring-webflux"
include "spring-webmvc"
include "spring-websocket"
include "framework-bom"
include "integration-tests"

rootProject.name = "spring"
rootProject.children.each {project ->
	project.buildFileName = "${project.name}.gradle"
}
